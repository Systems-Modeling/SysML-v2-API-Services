/*
 * SysML v2 REST/HTTP Pilot Implementation
 * Copyright (C) 2020  InterCAX LLC
 * Copyright (C) 2020  California Institute of Technology ("Caltech")
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * @license LGPL-3.0-or-later <http://spdx.org/licenses/LGPL-3.0-or-later>
 */

@AnyMetaDefs(value = {
        @AnyMetaDef(name = "MofObjectMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class),
                        @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                        @MetaValue(value = "Element", targetEntity = ElementImpl.class),
                        @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "ExternalElement", targetEntity = ExternalElementImpl.class),
                        @MetaValue(value = "ExternalRelationship", targetEntity = ExternalRelationshipImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "AcceptActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "ActionDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                }),
        @AnyMetaDef(name = "AllocationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AllocationUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                }),
        @AnyMetaDef(name = "AnalysisCaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AnalysisCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                }),
        @AnyMetaDef(name = "AnnotatingElementMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                        @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class),
                }),
        @AnyMetaDef(name = "AnnotatingFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                }),
        @AnyMetaDef(name = "AnnotationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                }),
        @AnyMetaDef(name = "AssertConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "AssociationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AssociationStructureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AttributeDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AttributeUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                }),
        @AnyMetaDef(name = "BehaviorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "BindingConnectorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                }),
        @AnyMetaDef(name = "BlockExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                }),
        @AnyMetaDef(name = "BooleanExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "CalculationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "CalculationUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                }),
        @AnyMetaDef(name = "CaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "CaseUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                }),
        @AnyMetaDef(name = "ClassMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ClassifierMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "CommentMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                }),
        @AnyMetaDef(name = "ConjugatedPortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ConjugatedPortTypingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                }),
        @AnyMetaDef(name = "ConjugationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                }),
        @AnyMetaDef(name = "ConnectionDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ConnectionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                }),
        @AnyMetaDef(name = "ConnectorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "ConstraintDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "ControlNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                }),
        @AnyMetaDef(name = "DataTypeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "DecisionNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                }),
        @AnyMetaDef(name = "DefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "DependencyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class),
                }),
        @AnyMetaDef(name = "DocumentationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                }),
        @AnyMetaDef(name = "ElementMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class),
                        @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                        @MetaValue(value = "Element", targetEntity = ElementImpl.class),
                        @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "ExternalElement", targetEntity = ExternalElementImpl.class),
                        @MetaValue(value = "ExternalRelationship", targetEntity = ExternalRelationshipImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "ElementFilterMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                }),
        @AnyMetaDef(name = "EndFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "EnumerationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "EnumerationUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                }),
        @AnyMetaDef(name = "ExhibitStateUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                }),
        @AnyMetaDef(name = "ExposeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                }),
        @AnyMetaDef(name = "ExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "FeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "FeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "FeatureReferenceExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                }),
        @AnyMetaDef(name = "FeatureTypingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                }),
        @AnyMetaDef(name = "FeatureValueMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                }),
        @AnyMetaDef(name = "ForkNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                }),
        @AnyMetaDef(name = "FunctionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "GeneralizationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                }),
        @AnyMetaDef(name = "ImportMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                }),
        @AnyMetaDef(name = "IndividualDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "IndividualUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                }),
        @AnyMetaDef(name = "InstanceCreationExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                }),
        @AnyMetaDef(name = "InteractionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                }),
        @AnyMetaDef(name = "InterfaceDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "InterfaceUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                }),
        @AnyMetaDef(name = "InvariantMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "InvocationExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ItemDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ItemFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                }),
        @AnyMetaDef(name = "ItemUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                }),
        @AnyMetaDef(name = "JoinNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                }),
        @AnyMetaDef(name = "LifeClassMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                }),
        @AnyMetaDef(name = "LiteralBooleanMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                }),
        @AnyMetaDef(name = "LiteralExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                }),
        @AnyMetaDef(name = "LiteralIntegerMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                }),
        @AnyMetaDef(name = "LiteralRealMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                }),
        @AnyMetaDef(name = "LiteralStringMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                }),
        @AnyMetaDef(name = "LiteralUnboundedMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                }),
        @AnyMetaDef(name = "MembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                }),
        @AnyMetaDef(name = "MergeNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                }),
        @AnyMetaDef(name = "MetadataFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                }),
        @AnyMetaDef(name = "MetadataFeatureValueMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                }),
        @AnyMetaDef(name = "MultiplicityMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                }),
        @AnyMetaDef(name = "MultiplicityRangeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                }),
        @AnyMetaDef(name = "NamespaceMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "NullExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ObjectiveMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                }),
        @AnyMetaDef(name = "OperatorExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                }),
        @AnyMetaDef(name = "PackageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                }),
        @AnyMetaDef(name = "ParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                }),
        @AnyMetaDef(name = "PartDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "PartUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                }),
        @AnyMetaDef(name = "PerformActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "PortConjugationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                }),
        @AnyMetaDef(name = "PortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "PortUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                }),
        @AnyMetaDef(name = "PredicateMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "QueryPathExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                }),
        @AnyMetaDef(name = "QueryPathStepExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "QueryQualifierExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                }),
        @AnyMetaDef(name = "RedefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ReferenceUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                }),
        @AnyMetaDef(name = "RelationshipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class),
                        @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                        @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                        @MetaValue(value = "ExternalRelationship", targetEntity = ExternalRelationshipImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "MetadataFeatureValue", targetEntity = MetadataFeatureValueImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class),
                        @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                }),
        @AnyMetaDef(name = "RenderingDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "RenderingUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                }),
        @AnyMetaDef(name = "RequirementConstraintMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                }),
        @AnyMetaDef(name = "RequirementDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "RequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "RequirementVerificationMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ResultExpressionMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ReturnParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                }),
        @AnyMetaDef(name = "SatisfyRequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "SendActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "SnapshotFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                }),
        @AnyMetaDef(name = "SourceEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                }),
        @AnyMetaDef(name = "StateDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "StateSubactionMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                }),
        @AnyMetaDef(name = "StateUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                }),
        @AnyMetaDef(name = "StepMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "StructureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "SubjectMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                }),
        @AnyMetaDef(name = "SubsettingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                }),
        @AnyMetaDef(name = "SuccessionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "SuccessionItemFlowMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "SuperclassingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                }),
        @AnyMetaDef(name = "TargetEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                }),
        @AnyMetaDef(name = "TextualRepresentationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class),
                }),
        @AnyMetaDef(name = "TimeSliceFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                }),
        @AnyMetaDef(name = "TransitionFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "TransitionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                }),
        @AnyMetaDef(name = "TypeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AnnotatingFeature", targetEntity = AnnotatingFeatureImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                        @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "TypeFeaturingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                        @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class),
                }),
        @AnyMetaDef(name = "UsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                        @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                        @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                        @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                        @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
        @AnyMetaDef(name = "VariantMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                }),
        @AnyMetaDef(name = "VerificationCaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "VerificationCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                }),
        @AnyMetaDef(name = "ViewDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ViewUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                }),
        @AnyMetaDef(name = "ViewpointDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ViewpointUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                }),
})

// TODO Abstract this concept to cli option
@GenericGenerators(value = {
        @GenericGenerator(name = "UseExistingOrGenerateUUIDGenerator", strategy = "jpa.UseExistingOrGenerateUUIDGenerator")
})
package org.omg.sysml.metamodel.impl;

import org.hibernate.annotations.AnyMetaDef;
import org.hibernate.annotations.AnyMetaDefs;
import org.hibernate.annotations.MetaValue;

// TODO Abstract this concept to cli option
import org.hibernate.annotations.GenericGenerators;
import org.hibernate.annotations.GenericGenerator;
import org.omg.sysml.external.impl.*;