# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Functions for Elements API
POST     /elements                     controllers.ElementsApiController.createElement()
POST     /models/:modelId/elements                     controllers.ElementsApiController.createElementInModel(modelId: String)
DELETE     /elements/:id                     controllers.ElementsApiController.deleteElement(id: String)
DELETE     /models/:modelId/elements/:elementId                     controllers.ElementsApiController.deleteElementInModel(modelId: String, elementId: String)
DELETE     /elements                     controllers.ElementsApiController.deleteElements()
DELETE     /models/:modelId/elements                     controllers.ElementsApiController.deleteElementsInModel(modelId: String)
GET     /elements/:id                     controllers.ElementsApiController.getElement(id: String)
GET     /models/:modelId/elements/:elementId                     controllers.ElementsApiController.getElementInModel(modelId: String, elementId: String)
GET     /elements                     controllers.ElementsApiController.getElements()
GET     /models/:modelId/elements                     controllers.ElementsApiController.getElementsInModel(modelId: String)
PUT     /elements/:id                     controllers.ElementsApiController.updateElement(id: String)
PUT     /models/:modelId/elements/:elementId                     controllers.ElementsApiController.updateElementInModel(modelId: String, elementId: String)
PUT     /elements                     controllers.ElementsApiController.updateElements()
PUT     /models/:modelId/elements                     controllers.ElementsApiController.updateElementsInModel(modelId: String)

#Functions for Models API
POST     /models                     controllers.ModelsApiController.createModel()
DELETE     /models/:id                     controllers.ModelsApiController.deleteModel(id: String)
DELETE     /models                     controllers.ModelsApiController.deleteModels()
GET     /models/:id                     controllers.ModelsApiController.getModel(id: String)
GET     /models                     controllers.ModelsApiController.getModels()
PUT     /models/:id                     controllers.ModelsApiController.updateModel(id: String)
PUT     /models                     controllers.ModelsApiController.updateModels()

#Functions for Relationships API
POST     /relationships                     controllers.RelationshipsApiController.createRelationship()
POST     /models/:modelId/relationships                     controllers.RelationshipsApiController.createRelationshipInModel(modelId: String)
DELETE     /relationships/:id                     controllers.RelationshipsApiController.deleteRelationship(id: String)
DELETE     /models/:modelId/relationships/:relationshipId                     controllers.RelationshipsApiController.deleteRelationshipInModel(modelId: String, relationshipId: String)
DELETE     /relationships                     controllers.RelationshipsApiController.deleteRelationships()
DELETE     /models/:modelId/relationships                     controllers.RelationshipsApiController.deleteRelationshipsInModel(modelId: String)
GET     /relationships/:id                     controllers.RelationshipsApiController.getRelationship(id: String)
GET     /models/:modelId/relationships/:relationshipId                     controllers.RelationshipsApiController.getRelationshipInModel(modelId: String, relationshipId: String)
GET     /relationships                     controllers.RelationshipsApiController.getRelationships()
GET     /relationships/source/:sourceId                     controllers.RelationshipsApiController.getRelationshipsBySource(sourceId: String)
GET     /relationships/target/:targetId                     controllers.RelationshipsApiController.getRelationshipsByTarget(targetId: String)
GET     /relationships/source/:sourceId/target/:targetId                     controllers.RelationshipsApiController.getRelationshipBySourceAndTarget(sourceId: String, targetId: String)
GET     /models/:modelId/relationships                     controllers.RelationshipsApiController.getRelationshipsInModel(modelId: String)
GET     /models/:modelId/relationships/source/:sourceId                     controllers.RelationshipsApiController.getRelationshipsInModelBySource(modelId: String, sourceId: String)
GET     /models/:modelId/relationships/target/:targetId                     controllers.RelationshipsApiController.getRelationshipsInModelByTarget(modelId: String, targetId: String)
GET     /models/:modelId/relationships/source/:sourceId/target/:targetId                     controllers.RelationshipsApiController.getRelationshipInModelBySourceAndTarget(modelId: String, sourceId: String, targetId: String)
PUT     /relationships/:id                     controllers.RelationshipsApiController.updateRelationship(id: String)
PUT     /models/:modelId/relationships/:relationshipId                     controllers.RelationshipsApiController.updateRelationshipInModel(modelId: String, relationshipId: String)
PUT     /relationships                     controllers.RelationshipsApiController.updateRelationships()
PUT     /models/:modelId/relationships                     controllers.RelationshipsApiController.updateRelationshipsInModel(modelId: String)

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file           controllers.Assets.at(file)
GET /versionedAssets/*file  controllers.Assets.versioned(file)